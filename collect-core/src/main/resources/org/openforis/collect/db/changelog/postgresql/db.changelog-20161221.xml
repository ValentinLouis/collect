<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
 
	<changeSet id="institutions" author="ricci" dbms="postgresql">

	    <preConditions onFail="MARK_RAN">
	    	<not>
		    	<tableExists tableName="ofc_institution" />
	    	</not>
	    </preConditions>
	    
	    <comment>User institutions</comment>
	    
	    <createTable tableName="ofc_institution">
			<column name="id" type="INTEGER">
				<constraints nullable="false" primaryKey="true"
					primaryKeyName="ofc_institution_pkey" />
			</column>
			<column name="name" type="VARCHAR(63)">
				<constraints nullable="false" unique="true" />
			</column>
			<column name="label" type="VARCHAR(127)">
				<constraints nullable="false" />
			</column>
			<column name="description" type="VARCHAR(255)" />
			<column name="created_by" type="INTEGER">
				<constraints nullable="false" 
					foreignKeyName="ofc_institution_created_by_fkey" 
					references="ofc_user(id)" />
			</column>
			<column name="creation_date" type="DATETIME">
				<constraints nullable="false" />
			</column>
			<column name="visibility_code" type="CHAR(1)"
				remarks="P=Public, N=Private">
				<constraints nullable="false" />
			</column> 
		</createTable>
    	
    	<createSequence sequenceName="ofc_institution_id_seq" />
		
		<createTable tableName="ofc_user_institution">
			<column name="user_id" type="INTEGER">
				<constraints nullable="false" 
					foreignKeyName="ofc_user_institution_user_fkey" 
					references="ofc_user(id)" />
			</column>
			<column name="institution_id" type="INTEGER">
				<constraints nullable="false" 
					foreignKeyName="ofc_user_institution_institution_fkey" 
					references="ofc_institution(id)" />
			</column>
			<column name="role_code" type="CHAR(1)" 
				remarks="Role in the institution: O=Owner, A=Administrator, D=Data analyzer, U=User/Operator, V=Viewer">
				<constraints nullable="false" />
			</column>
			<column name="status_code" type="CHAR(1)"
				remarks="P=Pending,A=Accepted,R=Rejected">
				<constraints nullable="false" />
			</column>
			<column name="request_date" type="DATETIME">
				<constraints nullable="false" />
			</column>
			<column name="member_since" type="DATETIME">
				<constraints nullable="false" />
			</column>
		</createTable>
		
		<addPrimaryKey 
			tableName="ofc_user_institution"
			columnNames="user_id, institution_id"
            constraintName="ofc_user_institution_pkey" />
		
		<addColumn tableName="ofc_survey">
            <column name="institution_id" type="INTEGER" />
	    </addColumn>
	</changeSet>
	
	<changeSet id="user-institutions-default-values" author="ricci" dbms="postgresql">
		<sql>
    		-- Create a default public institution named default_public_institution
	    	
    		INSERT INTO collect.ofc_institution(id, name, label, created_by, creation_date, visibility_code) 
	    		VALUES (
	    			nextval('collect.ofc_institution_id_seq'), 
		    		'default_public_institution',
		    		'Default Public Institution',
		    		(SELECT u.id FROM collect.ofc_user u WHERE u.username = 'admin'),
		    		CURRENT_TIMESTAMP,
		    		'P'
		    	);
		    
		    -- make the admin user owner of the Default Public Institution
		    	
		    INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
		    	VALUES (
   		 			(SELECT u.id FROM collect.ofc_user u WHERE u.username = 'admin'),
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'O',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
    		 	);
    		 
    		-- Create a user institution named USERNAME_default_private_institution per each user
	    	
    		INSERT INTO collect.ofc_institution(id, name, label, created_by, creation_date, visibility_code) 
	    		SELECT nextval('collect.ofc_institution_id_seq'), 
		    		CONCAT(u.username, '_default_private_institution'),
		    		CONCAT('Private Institution of ', u.username),
		    		u.id,
		    		CURRENT_TIMESTAMP,
		    		'N'
		    	FROM collect.ofc_user u
  		 	;
  		 	
  		 	-- Make each user owner of his default institution
	    	
    		INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = CONCAT(u.username, '_default_private_institution')),
    		 		'O',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
	 			FROM collect.ofc_user u
  		 	;
    		 	
    		 -- Make each user with administrator role be even administrator of the default_public_institution (backwards compatibility)
    		 
    		 INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'A',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
	 			FROM collect.ofc_user u, collect.ofc_user_role ur
	 			WHERE ur.user_id = u.id 
	 				AND u.username != 'admin'
	 				AND ur.role = 'ROLE_ADMIN'
  		 	;
    		 	
    		-- Users with role ROLE_ANALYSIS will be Analyzers in default_public_institution
    		 
    		 INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'D',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
  		 			FROM collect.ofc_user u, collect.ofc_user_role ur
  		 			WHERE 
  		 				u.id NOT IN (
		 					SELECT uug.user_id FROM collect.ofc_user_institution uug WHERE uug.institution_id = (
		 						SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution')
  		 				) 
  		 				AND ur.user_id = u.id 
  		 				AND u.username != 'admin'
  		 				AND ur.role = 'ROLE_ANALYSIS'
  		 	;
    		 	
    		-- Users with role ROLE_CLEANSING will be only Analyzers in default_public_institution
    		 
    		 INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'D',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
  		 			FROM collect.ofc_user u, collect.ofc_user_role ur
  		 			WHERE 
  		 				u.id NOT IN (
		 					SELECT uug.user_id FROM collect.ofc_user_institution uug WHERE uug.institution_id = (
		 						SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution')
  		 				) 
  		 				AND ur.user_id = u.id 
  		 				AND u.username != 'admin'
  		 				AND ur.role = 'ROLE_CLEANSING'
  		 	;
    		 	
    		-- Users with role ROLE_ENTRY will be only (data entry) Operators in default_public_institution
    		 
    		 INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'U',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
  		 			FROM collect.ofc_user u, collect.ofc_user_role ur
  		 			WHERE 
  		 				u.id NOT IN (
		 					SELECT uug.user_id FROM collect.ofc_user_institution uug WHERE uug.institution_id = (
		 						SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution')
  		 				) 
  		 				AND ur.user_id = u.id 
  		 				AND u.username != 'admin'
  		 				AND ur.role = 'ROLE_ENTRY'
  		 	;
    		 	
    		 -- Users with role ROLE_VIEW will be only Viewers in default_public_institution
    		 
    		 INSERT INTO collect.ofc_user_institution (user_id, institution_id, role_code, status_code, request_date, member_since)
   		 		SELECT 
   		 			u.id, 
    		 		(SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution'),
    		 		'V',
    		 		'A',
    		 		CURRENT_TIMESTAMP,
    		 		CURRENT_TIMESTAMP
  		 			FROM collect.ofc_user u, collect.ofc_user_role ur
  		 			WHERE 
  		 				u.id NOT IN (
		 					SELECT uug.user_id FROM collect.ofc_user_institution uug WHERE uug.institution_id = (
		 						SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution')
  		 				) 
  		 				AND ur.user_id = u.id 
  		 				AND u.username != 'admin'
  		 				AND ur.role = 'ROLE_VIEW'
  		 	;
  		 	
  		 	-- Assign all existing survey to the Default Institution
  		 	
  		 	UPDATE collect.ofc_survey SET institution_id = (SELECT ug.id FROM collect.ofc_institution ug WHERE ug.name = 'default_public_institution');
  		 	
   		 </sql>
    	
	</changeSet>
	
</databaseChangeLog>