<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security-3.0.4.xsd
	    http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	    http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	    http://www.springframework.org/schema/util
	    http://www.springframework.org/schema/util/spring-util-3.0.xsd
	    http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">

	<context:component-scan base-package="org.openforis.collect" />
	<context:annotation-config />

	<mvc:resources mapping="collect.swf" location="collect.swf" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/script/**" location="/script/" />
	<mvc:resources mapping="/org/**" location="/org/" />

	<bean name="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>resourcebundles/validation</value>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean class="org.openforis.collect.spring.handler.UrlFilenameHandlerAdapter" autowire="byName" />

	<util:map id="urlMappings">
		<!-- <entry key="**/messagebroker/**" value-ref="_messageBroker" /> -->
		<entry key="/index.htm" value-ref="fileNameViewController" />
		<entry key="/designer.htm" value-ref="fileNameViewController" />
		<entry key="/editSurvey.htm" value-ref="fileNameViewController" />
		<entry key="/error.htm" value-ref="fileNameViewController" />
		<entry key="/accessDenied.htm" value-ref="fileNameViewController" />
		<entry key="/exitUser.htm" value-ref="fileNameViewController" />
		<entry key="/login.htm" value-ref="fileNameViewController" />
		<entry key="/importSurvey.htm" value-ref="fileNameViewController" />
		<entry key="/logoUpload" value-ref="fileNameViewController" />

		<entry key="/surveys" value-ref="fileNameViewController" />
		<entry key="/speciesImport" value-ref="fileNameViewController" />
		<entry key="/species/export/*" value-ref="fileNameViewController" />
		<entry key="/samplingdesign/export/*" value-ref="fileNameViewController" />
	</util:map>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="urlMap" ref="urlMappings" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Controllers -->
	<bean id="fileNameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />

	<!-- ===================================== -->
	<!-- Data Source -->
	<!-- ===================================== -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/collectDs" />
		<property name="resourceRef" value="true" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- ===================================== -->
	<!-- Liquibase -->
	<!-- ===================================== -->
	<bean id="liquibase" class="org.openforis.collect.persistence.liquibase.DatabaseAwareSpringLiquibase">
		<property name="dataSource" ref="dataSource" />
		<property name="changeLog"
			value="classpath:org/openforis/collect/db/changelog/db.changelog-master.xml" />
		<property name="defaultSchema" value="collect" />
	</bean>

	<!-- ===================================== -->
	<!-- Daos -->
	<!-- ===================================== -->
	<bean id="applicationInfoDao" class="org.openforis.collect.persistence.ApplicationInfoDao"
		lazy-init="false" depends-on="liquibase">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="configurationDao" class="org.openforis.collect.persistence.ConfigurationDao"
		lazy-init="false" depends-on="liquibase">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="dynamicTableDao" class="org.openforis.collect.persistence.DynamicTableDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="logoDao" class="org.openforis.collect.persistence.LogoDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="recordDao" class="org.openforis.collect.persistence.RecordDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="samplingDesignDao" class="org.openforis.collect.persistence.SamplingDesignDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="surveyDao" class="org.openforis.collect.persistence.SurveyDao"
		init-method="init">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="surveyWorkDao" class="org.openforis.collect.persistence.SurveyWorkDao"
		init-method="init">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="taxonDao" class="org.openforis.collect.persistence.TaxonDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="taxonomyDao" class="org.openforis.collect.persistence.TaxonomyDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="taxonVernacularNameDao"
		class="org.openforis.collect.persistence.TaxonVernacularNameDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="userDao" class="org.openforis.collect.persistence.UserDao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- ===================================== -->
	<!-- Managers -->
	<!-- ===================================== -->
	<bean id="configurationManager" class="org.openforis.collect.manager.ConfigurationManager"
		init-method="init" />
	<bean id="databaseVersionManager" class="org.openforis.collect.manager.DatabaseVersionManager" />
	<bean id="logoManager" class="org.openforis.collect.manager.LogoManager" />
	<bean id="recordFileManager" class="org.openforis.collect.manager.RecordFileManager"
		init-method="init" scope="session" />
	<bean id="recordManager" class="org.openforis.collect.manager.RecordManager"
		init-method="init">
		<property name="lockTimeoutMillis" value="60000" />
	</bean>
	<bean id="persistedRecordIndexManager" class="org.openforis.collect.manager.RecordIndexManager"
		init-method="init" lazy-init="false" autowire="byName" />
	<bean id="volatileRecordIndexManager"
		class="org.openforis.collect.remoting.service.recordindex.VolatileRecordIndexManager"
		init-method="init" scope="session" lazy-init="false" autowire="byName" />
	<bean id="samplingDesignManager" class="org.openforis.collect.manager.SamplingDesignManager" />
	<bean id="sessionManager" class="org.openforis.collect.manager.SessionManager"
		scope="session" />
	<bean id="speciesManager" class="org.openforis.collect.manager.SpeciesManager" />
	<bean id="surveyManager" class="org.openforis.collect.manager.SurveyManager"
		init-method="init" />
	<bean id="userManager" class="org.openforis.collect.manager.UserManager" />

	<!-- <bean id="recordContext" class="org.openforis.collect.model.CollectRecordContext" 
		/> -->

	<!-- XML DataMarshaller -->
	<bean id="dataMarshaller" class="org.openforis.collect.persistence.xml.DataMarshaller"
		lazy-init="false" autowire-candidate="true" autowire="byName" />
		    
	<!-- ===================================== -->
	<!-- GraniteDs services -->
	<!-- ===================================== -->
	<bean id="codeListImportService"
		class="org.openforis.collect.remoting.service.CodeListImportService"
		autowire="byName" init-method="init" />
	<bean id="dataService" class="org.openforis.collect.remoting.service.DataService"
		autowire="byName" scope="session" />
	<bean id="dataExportService"
		class="org.openforis.collect.remoting.service.DataExportService"
		autowire="byName" init-method="init" scope="session" />
	<bean id="dataImportService"
		class="org.openforis.collect.remoting.service.DataImportService"
		autowire="byName" init-method="init" scope="session" />
	<bean id="logoService" class="org.openforis.collect.remoting.service.LogoService"
		autowire="byName" />
	<bean id="modelService" class="org.openforis.collect.remoting.service.ModelService"
		autowire="byName" />
	<bean id="recordIndexService"
		class="org.openforis.collect.remoting.service.recordindex.RecordIndexService"
		autowire="byName" scope="session" />
	<bean id="samplingDesignService"
		class="org.openforis.collect.remoting.service.SamplingDesignService"
		autowire="byName" />
	<bean id="samplingDesignImportService"
		class="org.openforis.collect.remoting.service.SamplingDesignImportService"
		autowire="byName" init-method="init" />
	<bean id="sessionService" class="org.openforis.collect.remoting.service.SessionService"
		autowire="byName" />
	<bean id="speciesService" class="org.openforis.collect.remoting.service.SpeciesService"
		autowire="byName" />
	<bean id="speciesImportService"
		class="org.openforis.collect.remoting.service.SpeciesImportService"
		autowire="byName" init-method="init" />
	<bean id="userService" class="org.openforis.collect.remoting.service.UserService"
		autowire="byName" />

	<!-- Expression Factory -->
	<bean id="expressionFactory" class="org.openforis.idm.model.expression.ExpressionFactory">
		<property name="lookupProvider" ref="lookupProvider" />
	</bean>
	
    <!--  Survey Context -->
	<bean id="validator" 					class="org.openforis.collect.model.validation.CollectValidator" />
	<bean id="lookupProvider" 				class="org.openforis.collect.persistence.DatabaseLookupProvider" />
	<bean id="externalCodeListProvider" 	class="org.openforis.collect.persistence.DatabaseExternalCodeListProvider" />
	
	<bean id="collectSurveyContext" class="org.openforis.collect.model.CollectSurveyContext" lazy-init="false">
		<constructor-arg><ref bean="expressionFactory"/></constructor-arg>
		<constructor-arg><ref bean="validator"/></constructor-arg>
		<property name="externalCodeListProvider" ref="externalCodeListProvider" />
	</bean>
    
	<!-- ===================================== -->
	<!-- Security -->
	<!-- ===================================== -->
	<bean id="userDetailsService"	class="org.openforis.collect.security.CollectUserDetailsService" />
	
</beans>
