<?xml version="1.0" encoding="utf-8"?>
<detail:AttributeFormItem xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:detail="org.openforis.collect.ui.component.detail.*"
						  >
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.metamodel.ui.proxy.AttributeModelObjectProxy;
			import org.openforis.collect.metamodel.ui.proxy.FieldProxy;
			import org.openforis.collect.metamodel.ui.proxy.FormSectionProxy;
			import org.openforis.collect.metamodel.ui.proxy.UIModelObjectProxy;
			
			public static const STATE_TABLE_LAYOUT:String = "table";
			public static const STATE_FORM_LAYOUT:String = "form";
			
			import mx.binding.utils.BindingUtils;
			
			import org.openforis.collect.metamodel.proxy.AttributeDefinitionProxy;
			import org.openforis.collect.ui.UIBuilder;
			import org.openforis.collect.util.UIUtil;
			
			protected var renderer:AttributeItemRenderer;
			
			override protected function initializeHandler(event:FlexEvent):void {
				super.initializeHandler(event);
				BindingUtils.bindSetter(setAttributeUIModelObject, this, "attributeUIModelObject");
			}
			
			protected function setAttributeUIModelObject(attributeUIModelObject:AttributeModelObjectProxy):void {
				updateCurrentState();
			}

			protected function updateCurrentState():void {
				if ( attributeUIModelObject != null ) {
					if ( UIModelObjectProxy(attributeUIModelObject).parent is FormSectionProxy ) {
						currentState = STATE_FORM_LAYOUT;
					} else {
						currentState = STATE_TABLE_LAYOUT;
					}
				}
			}
			
			override protected function createChildren():void {
				if(!childrenAdded) {
					super.createChildren();
					renderer = UIBuilder.createAttributeItemRenderer(attributeUIModelObject);
					BindingUtils.bindProperty(renderer, "attributeUIModelObject", this, "attributeUIModelObject");
					BindingUtils.bindProperty(renderer, "parentEntity", this, "parentEntity");
					BindingUtils.bindProperty(renderer, "attribute", this, "attribute");
					contentGroup.addElement(renderer);
					childrenAdded = true;
				}
			}
			
		]]>
	</fx:Script>
	
	<detail:states>
		<s:State name="table" />
		<s:State name="form" />
	</detail:states>
	
	<detail:layout>
		<s:HorizontalLayout gap="0" />
	</detail:layout>
	
	<detail:FormItemLabel id="formItemLabel"
			  		  nodeDefinition="{attributeUIModelObject.attributeDefinition}"
					  width="{labelWidth}"
					  includeIn="form"
					  />
	
	<s:Group id="contentGroup" />
	
</detail:AttributeFormItem>