<?xml version="1.0" encoding="utf-8"?>
<datagroup:MultipleNodesDataGroupItemRenderer 
				xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:detail="org.openforis.collect.ui.component.detail.*" 
				xmlns:datagroup="org.openforis.collect.ui.component.datagroup.*"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.ModelVersionProxy;
			import org.openforis.collect.metamodel.ui.proxy.TableProxy;
			import org.openforis.collect.model.proxy.EntityProxy;

			public static const DIRECTION_HORIZONTAL:String = "horizontal";
			public static const DIRECTION_VERTICAL:String = "vertical";
			
			private var _table:TableProxy;
			private var _modelVersion:ModelVersionProxy;
			private var _nodesDirection:String = DIRECTION_HORIZONTAL;
			
			override protected function createChildren():void {
				super.createChildren();
				contentGroup.addElement(rowNumberLabel);
				contentGroup.addElement(dataGroup);
			}
			
			[Bindable]
			public function get table():TableProxy {
				return _table;
			}
			
			public function set table(value:TableProxy):void {
				_table = value;
			}
			
			[Bindable(event="modelVersionChange")]
			public function get modelVersion():ModelVersionProxy {
				return _modelVersion;
			}
			
			public function set modelVersion(value:ModelVersionProxy):void {
				_modelVersion = value;
				dispatchEvent(new Event("modelVersionChange"));
			}
			
			[Bindable(event="modelVersionChange")]
			public function get columns():IList {
				return table.getLeafColumnsInVersion(modelVersion);
			}
			
			[Bindable(event="dataChange")]
			public function get entity():EntityProxy {
				return data as EntityProxy;
			}
			
			[Bindable]
			public function get nodesDirection():String {
				return _nodesDirection;
			}
			
			public function set nodesDirection(value:String):void {
				_nodesDirection = value;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:HorizontalLayout id="horizontalLayout" gap="4" />
		<s:VerticalLayout id="verticalLayout" gap="2" />
		
		<s:Label id="rowNumberLabel"
				 styleName="formLabel"
				 visible="{table.showRowNumbers}"
				 includeInLayout="{table.showRowNumbers}"
				 text="{entity.index + 1}."
				 width="20"
				 height="22"
				 verticalAlign="middle"
				 textAlign="right"
				 />
		
		<s:DataGroup id="dataGroup" dataProvider="{columns}" 
					 layout="{nodesDirection == DIRECTION_HORIZONTAL ? horizontalLayout: verticalLayout}">
			<s:itemRenderer>
				<fx:Component>
					<detail:TableCellItemRenderer
						parentEntity="{parentDocument.entity}"
						modelVersion="{parentDocument.modelVersion}"
						/>
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
	</fx:Declarations>
	
</datagroup:MultipleNodesDataGroupItemRenderer>
