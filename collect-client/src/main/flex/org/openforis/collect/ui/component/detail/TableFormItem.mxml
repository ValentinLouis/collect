<?xml version="1.0" encoding="utf-8"?>
<detail:CollectFormItem xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:datagroup="org.openforis.collect.ui.component.datagroup.*"
					   xmlns:detail="org.openforis.collect.ui.component.detail.*"
					   currentState="{STATE_BY_ROWS}"
					   >
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.openforis.collect.Application;
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.metamodel.proxy.ModelVersionProxy;
			import org.openforis.collect.metamodel.proxy.NodeDefinitionProxy;
			import org.openforis.collect.metamodel.ui.proxy.TableProxy;
			import org.openforis.collect.presenter.TableFormItemPresenter;
			import org.openforis.collect.ui.Images;
			
			public static const DIRECTION_BY_COLUMNS:String = "byColumns";
			public static const DIRECTION_BY_ROWS:String = "byRows";
			
			public static const STATE_BY_COLUMNS:String = "byColumns";
			public static const STATE_BY_ROWS:String = "byRows";
			
			private var _entitiesDirection:String = DIRECTION_BY_ROWS;
			private var _table:TableProxy;
			private var _headingComponents:IList;
			
			override protected function creationCompleteHandler(event:FlexEvent):void {
				super.creationCompleteHandler(event);
				//bind the position of horizontal scrollbars of header and content
				//so that the header is always aligned with the content
				BindingUtils.bindProperty(
					headerScroller.horizontalScrollBar, "value", 
					scroller, ["horizontalScrollBar", "value"]);
				BindingUtils.bindProperty(
					headerScroller.verticalScrollBar, "value", 
					scroller, ["verticalScrollBar", "value"]);
			}
			
			override protected function initPresenter():void {
				presenter = new TableFormItemPresenter(this);
			}
			
			protected function updateCurrentState():void {
				currentState = _entitiesDirection == DIRECTION_BY_COLUMNS ? STATE_BY_COLUMNS: STATE_BY_ROWS;
			}
			
			[Bindable(event="entitiesDirectionChange")]
			public function get entitiesDirection():String {
				return _entitiesDirection;
			}
			
			public function set entitiesDirection(value:String):void {
				_entitiesDirection = value;
				dispatchEvent(new Event("entitiesDirectionChange"));
				updateCurrentState();
			}
			
			[Bindable(event="tableChange")]
			public function get table():TableProxy {
				return _table;
			}
			
			public function set table(value:TableProxy):void {
				_table = value;
				dispatchEvent(new Event("tableChange"));
			}
			
			[Bindable(event="tableChange")]
			override public function get nodeDefinition():NodeDefinitionProxy {
				return _table == null ? null: _table.entityDefinition;
			}
			
			[Bindable]
			public function get headingComponents():IList {
				return _headingComponents;
			}

			public function set headingComponents(value:IList):void {
				_headingComponents = value;
			}

		]]>
	</fx:Script>
	
	<detail:states>
		<s:State name="byColumns" />
		<s:State name="byRows" />
	</detail:states>
	
	<detail:layout>
		<s:VerticalLayout />
	</detail:layout>
	
	<s:BorderContainer id="border" 
					   styleName="externalBorder"
					   height="100%" 
					   width="100%"
					   minHeight="0"
					   minWidth="0">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>

		<detail:FormItemLabel id="formItemLabel"
							  showHeadingLabel="true"
			  				  nodeDefinition="{nodeDefinition}"
							  visible="{! occupyEntirePage}"
							  includeInLayout="{! occupyEntirePage}"
							  />

		<s:Group height="100%" 
				 width="100%">
			<s:layout.byColumns>
				<s:HorizontalLayout paddingLeft="{occupyEntirePage ? 0: 30}" 
									paddingRight="0"/>
			</s:layout.byColumns>
			<s:layout.byRows>
				<s:VerticalLayout paddingLeft="{occupyEntirePage ? 0: 30}" 
								  paddingRight="0"/>
			</s:layout.byRows>
			
			<s:Scroller id="headerScroller" 
						horizontalScrollPolicy="off" 
						verticalScrollPolicy="off"
						width.byRows="100%"
						height.byColumns="100%"
						includeInLayout="{dataGroup.dataProvider.length > 0}"
						visible="{dataGroup.dataProvider.length > 0}"
						>
				<s:Group>
					<s:layout.byColumns>
						<s:VerticalLayout gap="2" />
					</s:layout.byColumns>
					<s:layout.byRows>
						<s:HorizontalLayout gap="2" />
					</s:layout.byRows>
					
					<s:Spacer id="dragAnchorSpacer"
							  includeInLayout="{Application.activeRecordEditable &amp;&amp; ! table.entityDefinition.enumerable}"
							  width="11" />
					<s:Spacer id="rowNumberSpacer"
							  includeInLayout="{table.showRowNumbers}"
							  width="20" />
					<datagroup:DataGroupHeader id="header" 
											   styleName="{entitiesDirection == TableFormItem.DIRECTION_BY_ROWS ? 
												   'horizontal': 'vertical'}"
											   headingComponents="{headingComponents}"
											   parentEntity="{parentEntity}"
											   labelsDirection="{entitiesDirection == TableFormItem.DIRECTION_BY_ROWS ? 
											   		DataGroupHeader.DIRECTION_HORIZONTAL: DataGroupHeader.DIRECTION_VERTICAL}"
											   />
					<!-- spacer that ensures the correct alignment of the headerScroller with the dataGroup scroller -->
					<s:Spacer 
						includeInLayout="{scroller.verticalScrollBar != null}" 
						width="{scroller.verticalScrollBar.width}" />
				</s:Group>
			</s:Scroller>
				
			<s:Scroller id="scroller" 
						width="100%"
						height="100%"
						>
				<s:DataGroup id="dataGroup">
					<s:layout.byColumns>
						<s:HorizontalLayout gap="2" />
					</s:layout.byColumns>
					<s:layout.byRows>
						<s:VerticalLayout gap="2" />
					</s:layout.byRows> 
					<s:itemRenderer>
						<fx:Component>
							<detail:TableRowItemRenderer
								table="{outerDocument.table}"
								modelVersion="{outerDocument.modelVersion}"
								dragEnabled="{Application.activeRecordEditable &amp;&amp; ! outerDocument.table.entityDefinition.enumerable}"
								nodesDirection="{outerDocument.entitiesDirection == TableFormItem.DIRECTION_BY_COLUMNS ? 
									TableRowItemRenderer.DIRECTION_VERTICAL: TableRowItemRenderer.DIRECTION_HORIZONTAL}">
								<fx:Script>
									<![CDATA[
										import org.openforis.collect.Application;
									]]>
								</fx:Script>
							</detail:TableRowItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:DataGroup>
			</s:Scroller>
			
			<mx:LinkButton
				id="addButton"
				label="{Message.get('global.add')}" 
				buttonMode="true" 
				icon="{Images.ADD}" 
				labelPlacement="left" 
				useHandCursor="true"
				visible="{Application.activeRecordEditable &amp;&amp; ! table.entityDefinition.enumerable}"
				includeInLayout="{Application.activeRecordEditable &amp;&amp; ! table.entityDefinition.enumerable}"
				/>
		</s:Group>
		
			
	</s:BorderContainer>
	
</detail:CollectFormItem>
